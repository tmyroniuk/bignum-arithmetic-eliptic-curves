#pragma once

#include "EllipticCurves.hpp"
#include "BigNum.hpp"

namespace  lab {
class Client {
public:
    Client() = default;

    Client(const EllipticCurve& curve, const BigNum& pow, const Point& point);

    Point getPublicKey() const;

    Point getPrivateKey() const;

    Point getPoint() const;

    EllipticCurve getCurve() const;

    /**
     * @brief sets private key, gets as parametr public key generated by second client
     */
    void setPrivateKey(const Point& gotPublicKey);

private:
    EllipticCurve _curve;
    BigNum _pow;
    Point _point;
    Point _private_key;
};

class GettingKeySimulation{
public:
    GettingKeySimulation() = default;

    GettingKeySimulation(const EllipticCurve& curve, const BigNum& xPow, const BigNum& yPow, const Point& point);

    Point getAlicePrivateKey() const;

    Point getBobPrivateKey() const;

private:
    EllipticCurve _curve;
    Point _point;
    BigNum _x_pow, _y_pow;
    Client _alice, _bob;
};

}


